// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthz": {
            "get": {
                "description": "Check if the API is up",
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/vehicles/{vehicle_id}/history": {
            "get": {
                "description": "Get the location history for a vehicle within a time range",
                "tags": [
                    "vehicles"
                ],
                "summary": "Get vehicle location history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339)",
                        "name": "start",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339)",
                        "name": "end",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vehicles/{vehicle_id}/location": {
            "get": {
                "description": "Get the latest location for a vehicle",
                "tags": [
                    "vehicles"
                ],
                "summary": "Get latest location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http.LocationResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/internal_delivery_http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_delivery_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "internal_delivery_http.LocationResponse": {
            "type": "object",
            "properties": {
                "heading": {
                    "type": "number"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "speed": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                },
                "vehicle_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Vehicle Tracker API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
